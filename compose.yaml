version: '3.8'

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  app:
    build:
      context: .
    image: nextjs-dev
    ports:
      - "3002:3000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    # --- ADD/MODIFY THIS VOLUMES SECTION ---
    volumes:
      - .:/app # This mounts your host project directory to /app in the container
      - /app/node_modules # This explicitly tells Docker *not* to sync node_modules back to host,
                          # preventing potential issues with host/container OS differences
    # ---------------------------------------
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    command: pnpm run dev

volumes:
  postgres-data: