services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  app:
    build:
      context: .
    ports:
      - "3002:3000"
    env_file:
      - .env
    environment:
      # Environment variables from .env will be loaded.
      # You can add or override variables here if needed.
      DEBUG: socket.io:*
      WS_PING_TIMEOUT: "60000"
      WS_PING_INTERVAL: "25000"
    depends_on:
      db:
        condition: service_healthy
    networks: # This was the missing piece
      - app-network
    volumes:
      - ./src:/app/src # Mount specific source directory
      - ./prisma:/app/prisma # Mount prisma directory
      - /app/node_modules # Anonymous volume to preserve node_modules inside container
    healthcheck: # Added back healthcheck from original app.ts description
      test: ["CMD", "curl", "-f", "http://localhost:3000/test"] # Use /test endpoint for healthcheck
      interval: 30s
      timeout: 10s
      retries: 3
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    command: sh -c "pnpm prisma migrate dev && pnpm run dev" # Run migrations before starting

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: